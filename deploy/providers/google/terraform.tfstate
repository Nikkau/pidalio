{
    "version": 3,
    "terraform_version": "0.7.7",
    "serial": 43,
    "lineage": "c7195f2e-4197-4d72-8e3a-f3dc56ff692f",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "random_id.token": {
                    "type": "random_id",
                    "depends_on": [],
                    "primary": {
                        "id": "oemRfDeNvajV06Qun9IgIg",
                        "attributes": {
                            "b64": "oemRfDeNvajV06Qun9IgIg",
                            "byte_length": "16",
                            "dec": "215218463280287781358415623810698059810",
                            "hex": "a1e9917c378dbda8d5d3a42e9fd22022",
                            "id": "oemRfDeNvajV06Qun9IgIg"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "google",
                "compute"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.user_data_node": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b25c7d66462558ec3269c36a22a10a3ef1c083bd28fc190e3038ab19926c42d2",
                        "attributes": {
                            "id": "b25c7d66462558ec3269c36a22a10a3ef1c083bd28fc190e3038ab19926c42d2",
                            "rendered": "#cloud-config\nwrite_files:\n  - path: /opt/weave-init.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      echo WEAVE_PEERS=\\\"10.1.1.2 10.1.1.3 10.1.1.4 10.1.1.5\\\" \u003e /etc/weave.env\n      echo WEAVEPROXY_ARGS=\\\"--rewrite-inspect\\\" \u003e\u003e /etc/weave.env\n      echo WEAVE_PASSWORD=\\\"a1e9917c378dbda8d5d3a42e9fd22022\\\" \u003e\u003e /etc/weave.env\n  - path: /opt/pidalio-init.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      mkdir -p /etc/pidalio/rclone\n      NODE_NAME=$(hostname |cut -d '.' -f 1)\n      NODE_FQDN=$(hostname)\n      GCE_TOKEN=$(curl -H 'Metadata-Flavor: Google' http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token)\n      cat \u003c\u003cEOF \u003e /etc/pidalio/rclone/rclone.conf\n      [remote]\n      type = google cloud storage\n      token = $GCE_TOKEN\n      EOF\n      cat \u003c\u003cEOF \u003e /etc/pidalio.env\n      NODE_NAME=$NODE_NAME\n      NODE_FQDN=$NODE_FQDN\n      NODE_ID=$NODE_NAME\n      NODE_IP=$private_ipv4\n      NODE_PUBLIC_IP=$public_ipv4\n      NODE_TYPE=gce\n      CEPH=True\n      CEPH_TYPE=dynamic\n      MONITORING=True\n      PROVIDER=\"gce\"\n      PROVIDER_DNS=\"169.254.169.254\"\n      PROVIDER_REGION=\"europe-west1\"\n      PROVIDER_ZONE=\"europe-west1-c\"\n      PEER=\"10.1.1.2 10.1.1.3 10.1.1.4 10.1.1.5\"\n      PIDALIO_TOKEN=a1e9917c378dbda8d5d3a42e9fd22022\n      DOMAIN=cluster.local\n      PATH=/opt/bin/:/usr/bin/:/usr/sbin:$PATH\n      EOF\n      if [[ -d /opt/pidalio ]]\n      then\n        echo \"Pidalio already checkout\"\n      else\n        git clone -b tf https://github.com/cedbossneo/pidalio.git /opt/pidalio\n      fi\n      /opt/pidalio/init.sh\n  - path: /opt/pidalio-units.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      while true; do\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-apiserver.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-controller.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-scheduler.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio-proxy.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio-node.service\n        sleep 60\n      done\ncoreos:\n  update:\n    reboot-strategy: \"off\"\n  fleet:\n      public-ip: \"$public_ipv4\"\n      metadata: \"region=gce\"\n      etcd_servers: \"http://localhost:2379\"\n  units:\n    - name: 50-docker.network\n      mask: true\n    - name: 50-docker-veth.network\n      mask: true\n    - name: zz-default.network\n      runtime: false\n      content: |\n        # default should not match virtual Docker/weave bridge/veth network interfaces\n        [Match]\n        Name=ens*\n\n        [Network]\n        DHCP=yes\n\n        [DHCP]\n        UseMTU=true\n        UseDomains=true\n    - name: etcd2.service\n      command: start\n      content: |\n        [Unit]\n        Description=etcd2\n        After=weave-network.target\n        Requires=weave-network.target\n        Conflicts=etcd.service\n\n        [Service]\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave expose\n        ExecStart=/opt/pidalio-init.sh\n        ExecStop=/usr/bin/docker rm -f etcd etcd-proxy\n        Restart=always\n        RestartSec=10s\n        LimitNOFILE=40000\n        TimeoutStartSec=5m\n\n        [Install]\n        WantedBy=multi-user.target\n    - name: fleet.service\n      command: start\n    - name: weave-network.target\n      enable: true\n      content: |\n        [Unit]\n        Description=Weave Network Setup Complete\n        Documentation=man:systemd.special(7)\n        RefuseManualStart=no\n        [Install]\n        WantedBy=multi-user.target\n    - name: weave-init.service\n      command: start\n      content: |\n        [Unit]\n        Before=install-weave.service\n        Description=Install Weave\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        TimeoutStartSec=5m\n        ExecStart=/opt/weave-init.sh\n    - name: 10-weave.network\n      runtime: false\n      content: |\n        [Match]\n        Type=bridge\n        Name=weave*\n        [Network]\n    - name: install-weave.service\n      enable: true\n      content: |\n        [Unit]\n        After=docker.service weave-init.service\n        Requires=docker.service weave-init.service\n        Before=weave.service\n        Description=Install Weave\n        Requires=network-online.target\n        [Service]\n        EnvironmentFile=-/etc/weave.env\n        Type=oneshot\n        RemainAfterExit=yes\n        TimeoutStartSec=5m\n        ExecStartPre=/bin/mkdir -p /opt/bin/ /opt/cni/bin /etc/cni/net.d\n        ExecStartPre=-/usr/bin/wget -O /tmp/cni.tgz https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\n        ExecStartPre=-/usr/bin/tar -xvzf /tmp/cni.tgz -C /opt/cni/bin/\n        ExecStartPre=/usr/bin/curl \\\n          --silent \\\n          --location \\\n          git.io/weave \\\n          --output /opt/bin/weave\n        ExecStartPre=/usr/bin/chmod +x /opt/bin/weave\n        ExecStart=/opt/bin/weave setup\n        [Install]\n        WantedBy=weave-network.target\n        WantedBy=weave.service\n    - name: weave.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Router\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-router $WEAVE_PEERS\n        ExecStart=/usr/bin/docker attach weave\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-router\n        [Install]\n        WantedBy=weave-network.target\n    - name: weaveproxy.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Proxy\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-proxy $WEAVEPROXY_ARGS\n        ExecStart=/usr/bin/docker attach weaveproxy\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-proxy\n        [Install]\n        WantedBy=weave-network.target\n    - name: weaveplugin.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Plugin\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-plugin\n        ExecStart=/usr/bin/docker attach weaveplugin\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-plugin\n        [Install]\n        WantedBy=weave-network.target\n    - name: pidalio-launch.service\n      command: start\n      content: |\n        [Unit]\n        After=fleet.service etcd2.service\n        Requires=fleet.service etcd2.service\n        [Service]\n        Restart=always\n        RestartSec=10\n        TimeoutStartSec=5m\n        ExecStart=/opt/pidalio-units.sh\n",
                            "template": "#cloud-config\nwrite_files:\n  - path: /opt/weave-init.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      echo WEAVE_PEERS=\\\"${peers}\\\" \u003e /etc/weave.env\n      echo WEAVEPROXY_ARGS=\\\"--rewrite-inspect\\\" \u003e\u003e /etc/weave.env\n      echo WEAVE_PASSWORD=\\\"${token}\\\" \u003e\u003e /etc/weave.env\n  - path: /opt/pidalio-init.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      mkdir -p /etc/pidalio/rclone\n      NODE_NAME=$(hostname |cut -d '.' -f 1)\n      NODE_FQDN=$(hostname)\n      GCE_TOKEN=$(curl -H 'Metadata-Flavor: Google' http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token)\n      cat \u003c\u003cEOF \u003e /etc/pidalio/rclone/rclone.conf\n      [remote]\n      type = google cloud storage\n      token = $GCE_TOKEN\n      EOF\n      cat \u003c\u003cEOF \u003e /etc/pidalio.env\n      NODE_NAME=$NODE_NAME\n      NODE_FQDN=$NODE_FQDN\n      NODE_ID=$NODE_NAME\n      NODE_IP=$private_ipv4\n      NODE_PUBLIC_IP=$public_ipv4\n      NODE_TYPE=gce\n      CEPH=True\n      CEPH_TYPE=dynamic\n      MONITORING=True\n      PROVIDER=\"gce\"\n      PROVIDER_DNS=\"169.254.169.254\"\n      PROVIDER_REGION=\"${region}\"\n      PROVIDER_ZONE=\"${zone}\"\n      PEER=\"${peers}\"\n      PIDALIO_TOKEN=${token}\n      DOMAIN=cluster.local\n      PATH=/opt/bin/:/usr/bin/:/usr/sbin:$PATH\n      EOF\n      if [[ -d /opt/pidalio ]]\n      then\n        echo \"Pidalio already checkout\"\n      else\n        git clone -b tf https://github.com/cedbossneo/pidalio.git /opt/pidalio\n      fi\n      /opt/pidalio/init.sh\n  - path: /opt/pidalio-units.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      while true; do\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-apiserver.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-controller.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-scheduler.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio-proxy.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio-node.service\n        sleep 60\n      done\ncoreos:\n  update:\n    reboot-strategy: \"off\"\n  fleet:\n      public-ip: \"$public_ipv4\"\n      metadata: \"region=gce\"\n      etcd_servers: \"http://localhost:2379\"\n  units:\n    - name: 50-docker.network\n      mask: true\n    - name: 50-docker-veth.network\n      mask: true\n    - name: zz-default.network\n      runtime: false\n      content: |\n        # default should not match virtual Docker/weave bridge/veth network interfaces\n        [Match]\n        Name=ens*\n\n        [Network]\n        DHCP=yes\n\n        [DHCP]\n        UseMTU=true\n        UseDomains=true\n    - name: etcd2.service\n      command: start\n      content: |\n        [Unit]\n        Description=etcd2\n        After=weave-network.target\n        Requires=weave-network.target\n        Conflicts=etcd.service\n\n        [Service]\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave expose\n        ExecStart=/opt/pidalio-init.sh\n        ExecStop=/usr/bin/docker rm -f etcd etcd-proxy\n        Restart=always\n        RestartSec=10s\n        LimitNOFILE=40000\n        TimeoutStartSec=5m\n\n        [Install]\n        WantedBy=multi-user.target\n    - name: fleet.service\n      command: start\n    - name: weave-network.target\n      enable: true\n      content: |\n        [Unit]\n        Description=Weave Network Setup Complete\n        Documentation=man:systemd.special(7)\n        RefuseManualStart=no\n        [Install]\n        WantedBy=multi-user.target\n    - name: weave-init.service\n      command: start\n      content: |\n        [Unit]\n        Before=install-weave.service\n        Description=Install Weave\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        TimeoutStartSec=5m\n        ExecStart=/opt/weave-init.sh\n    - name: 10-weave.network\n      runtime: false\n      content: |\n        [Match]\n        Type=bridge\n        Name=weave*\n        [Network]\n    - name: install-weave.service\n      enable: true\n      content: |\n        [Unit]\n        After=docker.service weave-init.service\n        Requires=docker.service weave-init.service\n        Before=weave.service\n        Description=Install Weave\n        Requires=network-online.target\n        [Service]\n        EnvironmentFile=-/etc/weave.env\n        Type=oneshot\n        RemainAfterExit=yes\n        TimeoutStartSec=5m\n        ExecStartPre=/bin/mkdir -p /opt/bin/ /opt/cni/bin /etc/cni/net.d\n        ExecStartPre=-/usr/bin/wget -O /tmp/cni.tgz https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\n        ExecStartPre=-/usr/bin/tar -xvzf /tmp/cni.tgz -C /opt/cni/bin/\n        ExecStartPre=/usr/bin/curl \\\n          --silent \\\n          --location \\\n          git.io/weave \\\n          --output /opt/bin/weave\n        ExecStartPre=/usr/bin/chmod +x /opt/bin/weave\n        ExecStart=/opt/bin/weave setup\n        [Install]\n        WantedBy=weave-network.target\n        WantedBy=weave.service\n    - name: weave.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Router\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-router $WEAVE_PEERS\n        ExecStart=/usr/bin/docker attach weave\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-router\n        [Install]\n        WantedBy=weave-network.target\n    - name: weaveproxy.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Proxy\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-proxy $WEAVEPROXY_ARGS\n        ExecStart=/usr/bin/docker attach weaveproxy\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-proxy\n        [Install]\n        WantedBy=weave-network.target\n    - name: weaveplugin.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Plugin\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-plugin\n        ExecStart=/usr/bin/docker attach weaveplugin\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-plugin\n        [Install]\n        WantedBy=weave-network.target\n    - name: pidalio-launch.service\n      command: start\n      content: |\n        [Unit]\n        After=fleet.service etcd2.service\n        Requires=fleet.service etcd2.service\n        [Service]\n        Restart=always\n        RestartSec=10\n        TimeoutStartSec=5m\n        ExecStart=/opt/pidalio-units.sh\n",
                            "vars.%": "4",
                            "vars.peers": "10.1.1.2 10.1.1.3 10.1.1.4 10.1.1.5",
                            "vars.region": "europe-west1",
                            "vars.token": "a1e9917c378dbda8d5d3a42e9fd22022",
                            "vars.zone": "europe-west1-c"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "google_compute_instance_group_manager.instance_group_node": {
                    "type": "google_compute_instance_group_manager",
                    "depends_on": [
                        "google_compute_instance_template.instance_template_node",
                        "google_compute_instance_template.instance_template_node"
                    ],
                    "primary": {
                        "id": "pidalio-nodes",
                        "attributes": {
                            "base_instance_name": "pidalio-node",
                            "description": "",
                            "fingerprint": "3ErzxJ0Cxvg=",
                            "id": "pidalio-nodes",
                            "instance_group": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/zones/europe-west1-c/instanceGroups/pidalio-nodes",
                            "instance_template": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/global/instanceTemplates/pidalio-node",
                            "name": "pidalio-nodes",
                            "named_port.#": "0",
                            "project": "sandbox-wescale",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/zones/europe-west1-c/instanceGroupManagers/pidalio-nodes",
                            "target_pools.#": "0",
                            "target_size": "3",
                            "update_strategy": "RESTART",
                            "zone": "europe-west1-c"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "google_compute_instance_template.instance_template_node": {
                    "type": "google_compute_instance_template",
                    "depends_on": [
                        "data.template_file.user_data_node"
                    ],
                    "primary": {
                        "id": "pidalio-node",
                        "attributes": {
                            "automatic_restart": "true",
                            "can_ip_forward": "true",
                            "description": "Pidalio Node",
                            "disk.#": "1",
                            "disk.0.auto_delete": "true",
                            "disk.0.boot": "true",
                            "disk.0.device_name": "",
                            "disk.0.disk_name": "",
                            "disk.0.disk_size_gb": "0",
                            "disk.0.disk_type": "pd-standard",
                            "disk.0.interface": "SCSI",
                            "disk.0.mode": "READ_WRITE",
                            "disk.0.source": "",
                            "disk.0.source_image": "coreos-cloud/coreos-stable",
                            "disk.0.type": "PERSISTENT",
                            "id": "pidalio-node",
                            "instance_description": "Pidalio Node",
                            "machine_type": "n1-standard-2",
                            "metadata.%": "2",
                            "metadata.ssh-keys": "core:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwrZA+XB29C7VeRMur/BUrLZ6zlu4Ajl2KVvLmc7MtmfWCujyIVrXfPdRzUZT+rXmDN1Nzm7OxCy0V7cR2+GswiLUacOpCVddED7Tb3OWK/C1PcNw2N7aIpREkjaP3tFVVQ3/FvIkQdtkn0AX7dXhVyOwIQCteanRKhCv9K1tI7muUy01r/kb9uOIrzqUzLy4sz1LJrTSLLFge4ORiLJlh9RtkAP2t9KcSZPZQisbzGyIdr8YlvWQUIbRGhelc9v92cfKxlSGo/OWWmHvwUfrmjKzzHdH4fwmD9N0zoKggFQexzSZsz43PFVfazobxWBEkwTlfQhkmnm1Y+o7TIgXz cedric@MacBook-Pro-de-Cedric-Pro.local",
                            "metadata.user-data": "#cloud-config\nwrite_files:\n  - path: /opt/weave-init.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      echo WEAVE_PEERS=\\\"10.1.1.2 10.1.1.3 10.1.1.4 10.1.1.5\\\" \u003e /etc/weave.env\n      echo WEAVEPROXY_ARGS=\\\"--rewrite-inspect\\\" \u003e\u003e /etc/weave.env\n      echo WEAVE_PASSWORD=\\\"a1e9917c378dbda8d5d3a42e9fd22022\\\" \u003e\u003e /etc/weave.env\n  - path: /opt/pidalio-init.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      mkdir -p /etc/pidalio/rclone\n      NODE_NAME=$(hostname |cut -d '.' -f 1)\n      NODE_FQDN=$(hostname)\n      GCE_TOKEN=$(curl -H 'Metadata-Flavor: Google' http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token)\n      cat \u003c\u003cEOF \u003e /etc/pidalio/rclone/rclone.conf\n      [remote]\n      type = google cloud storage\n      token = $GCE_TOKEN\n      EOF\n      cat \u003c\u003cEOF \u003e /etc/pidalio.env\n      NODE_NAME=$NODE_NAME\n      NODE_FQDN=$NODE_FQDN\n      NODE_ID=$NODE_NAME\n      NODE_IP=$private_ipv4\n      NODE_PUBLIC_IP=$public_ipv4\n      NODE_TYPE=gce\n      CEPH=True\n      CEPH_TYPE=dynamic\n      MONITORING=True\n      PROVIDER=\"gce\"\n      PROVIDER_DNS=\"169.254.169.254\"\n      PROVIDER_REGION=\"europe-west1\"\n      PROVIDER_ZONE=\"europe-west1-c\"\n      PEER=\"10.1.1.2 10.1.1.3 10.1.1.4 10.1.1.5\"\n      PIDALIO_TOKEN=a1e9917c378dbda8d5d3a42e9fd22022\n      DOMAIN=cluster.local\n      PATH=/opt/bin/:/usr/bin/:/usr/sbin:$PATH\n      EOF\n      if [[ -d /opt/pidalio ]]\n      then\n        echo \"Pidalio already checkout\"\n      else\n        git clone -b tf https://github.com/cedbossneo/pidalio.git /opt/pidalio\n      fi\n      /opt/pidalio/init.sh\n  - path: /opt/pidalio-units.sh\n    permissions: 0700\n    owner: \"root:root\"\n    content: |\n      #!/bin/bash\n      while true; do\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-apiserver.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-controller.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/master/pidalio-scheduler.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio-proxy.service\n        /usr/bin/fleetctl start /opt/pidalio/kube/units/pidalio-node.service\n        sleep 60\n      done\ncoreos:\n  update:\n    reboot-strategy: \"off\"\n  fleet:\n      public-ip: \"$public_ipv4\"\n      metadata: \"region=gce\"\n      etcd_servers: \"http://localhost:2379\"\n  units:\n    - name: 50-docker.network\n      mask: true\n    - name: 50-docker-veth.network\n      mask: true\n    - name: zz-default.network\n      runtime: false\n      content: |\n        # default should not match virtual Docker/weave bridge/veth network interfaces\n        [Match]\n        Name=ens*\n\n        [Network]\n        DHCP=yes\n\n        [DHCP]\n        UseMTU=true\n        UseDomains=true\n    - name: etcd2.service\n      command: start\n      content: |\n        [Unit]\n        Description=etcd2\n        After=weave-network.target\n        Requires=weave-network.target\n        Conflicts=etcd.service\n\n        [Service]\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave expose\n        ExecStart=/opt/pidalio-init.sh\n        ExecStop=/usr/bin/docker rm -f etcd etcd-proxy\n        Restart=always\n        RestartSec=10s\n        LimitNOFILE=40000\n        TimeoutStartSec=5m\n\n        [Install]\n        WantedBy=multi-user.target\n    - name: fleet.service\n      command: start\n    - name: weave-network.target\n      enable: true\n      content: |\n        [Unit]\n        Description=Weave Network Setup Complete\n        Documentation=man:systemd.special(7)\n        RefuseManualStart=no\n        [Install]\n        WantedBy=multi-user.target\n    - name: weave-init.service\n      command: start\n      content: |\n        [Unit]\n        Before=install-weave.service\n        Description=Install Weave\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        TimeoutStartSec=5m\n        ExecStart=/opt/weave-init.sh\n    - name: 10-weave.network\n      runtime: false\n      content: |\n        [Match]\n        Type=bridge\n        Name=weave*\n        [Network]\n    - name: install-weave.service\n      enable: true\n      content: |\n        [Unit]\n        After=docker.service weave-init.service\n        Requires=docker.service weave-init.service\n        Before=weave.service\n        Description=Install Weave\n        Requires=network-online.target\n        [Service]\n        EnvironmentFile=-/etc/weave.env\n        Type=oneshot\n        RemainAfterExit=yes\n        TimeoutStartSec=5m\n        ExecStartPre=/bin/mkdir -p /opt/bin/ /opt/cni/bin /etc/cni/net.d\n        ExecStartPre=-/usr/bin/wget -O /tmp/cni.tgz https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\n        ExecStartPre=-/usr/bin/tar -xvzf /tmp/cni.tgz -C /opt/cni/bin/\n        ExecStartPre=/usr/bin/curl \\\n          --silent \\\n          --location \\\n          git.io/weave \\\n          --output /opt/bin/weave\n        ExecStartPre=/usr/bin/chmod +x /opt/bin/weave\n        ExecStart=/opt/bin/weave setup\n        [Install]\n        WantedBy=weave-network.target\n        WantedBy=weave.service\n    - name: weave.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Router\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-router $WEAVE_PEERS\n        ExecStart=/usr/bin/docker attach weave\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-router\n        [Install]\n        WantedBy=weave-network.target\n    - name: weaveproxy.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Proxy\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-proxy $WEAVEPROXY_ARGS\n        ExecStart=/usr/bin/docker attach weaveproxy\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-proxy\n        [Install]\n        WantedBy=weave-network.target\n    - name: weaveplugin.service\n      enable: true\n      content: |\n        [Unit]\n        After=install-weave.service\n        After=docker.service\n        Description=Weave Network Plugin\n        Documentation=http://weave.works/docs\n        Requires=docker.service\n        Requires=install-weave.service\n        [Service]\n        TimeoutStartSec=5m\n        EnvironmentFile=-/etc/weave.env\n        ExecStartPre=/opt/bin/weave launch-plugin\n        ExecStart=/usr/bin/docker attach weaveplugin\n        Restart=on-failure\n        ExecStop=/opt/bin/weave stop-plugin\n        [Install]\n        WantedBy=weave-network.target\n    - name: pidalio-launch.service\n      command: start\n      content: |\n        [Unit]\n        After=fleet.service etcd2.service\n        Requires=fleet.service etcd2.service\n        [Service]\n        Restart=always\n        RestartSec=10\n        TimeoutStartSec=5m\n        ExecStart=/opt/pidalio-units.sh\n",
                            "metadata_fingerprint": "VQjA0k33_9c=",
                            "name": "pidalio-node",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.nat_ip": "",
                            "network_interface.0.network": "pidalio",
                            "network_interface.0.subnetwork": "pidalio-node",
                            "project": "sandbox-wescale",
                            "region": "europe-west1",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/global/instanceTemplates/pidalio-node",
                            "service_account.#": "1",
                            "service_account.0.email": "",
                            "service_account.0.scopes.#": "3",
                            "service_account.0.scopes.0": "https://www.googleapis.com/auth/userinfo.email",
                            "service_account.0.scopes.1": "https://www.googleapis.com/auth/compute",
                            "service_account.0.scopes.2": "https://www.googleapis.com/auth/devstorage.read_write",
                            "tags.#": "1",
                            "tags.2569571919": "pidalio",
                            "tags_fingerprint": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "google",
                "network"
            ],
            "outputs": {
                "subnet": {
                    "sensitive": false,
                    "type": "string",
                    "value": "pidalio-node"
                }
            },
            "resources": {
                "google_compute_firewall.pidalio": {
                    "type": "google_compute_firewall",
                    "depends_on": [
                        "google_compute_network.pidalio"
                    ],
                    "primary": {
                        "id": "pidalio",
                        "attributes": {
                            "allow.#": "3",
                            "allow.1367131964.ports.#": "0",
                            "allow.1367131964.protocol": "icmp",
                            "allow.1486604749.ports.#": "0",
                            "allow.1486604749.protocol": "udp",
                            "allow.3848845357.ports.#": "0",
                            "allow.3848845357.protocol": "tcp",
                            "description": "",
                            "id": "pidalio",
                            "name": "pidalio",
                            "network": "pidalio",
                            "project": "sandbox-wescale",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/global/firewalls/pidalio",
                            "source_ranges.#": "1",
                            "source_ranges.1080289494": "0.0.0.0/0",
                            "source_tags.#": "1",
                            "source_tags.2569571919": "pidalio",
                            "target_tags.#": "0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "google_compute_network.pidalio": {
                    "type": "google_compute_network",
                    "depends_on": [],
                    "primary": {
                        "id": "pidalio",
                        "attributes": {
                            "auto_create_subnetworks": "false",
                            "gateway_ipv4": "",
                            "id": "pidalio",
                            "name": "pidalio",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/global/networks/pidalio"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "google_compute_subnetwork.pidalio-node": {
                    "type": "google_compute_subnetwork",
                    "depends_on": [
                        "google_compute_network.pidalio"
                    ],
                    "primary": {
                        "id": "europe-west1/pidalio-node",
                        "attributes": {
                            "gateway_address": "10.1.1.1",
                            "id": "europe-west1/pidalio-node",
                            "ip_cidr_range": "10.1.1.0/24",
                            "name": "pidalio-node",
                            "network": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/global/networks/pidalio",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/sandbox-wescale/regions/europe-west1/subnetworks/pidalio-node"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
